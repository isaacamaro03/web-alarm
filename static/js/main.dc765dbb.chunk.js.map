{"version":3,"sources":["components/AlarmsContext/AlarmsContext.js","utils/store.js","components/Root/Header/Clock/Clock.js","components/Root/Header/Clock/utils.js","components/Root/Header/Clock/hooks.js","components/Root/Header/Header.js","utils/models/repetitionModel.js","components/Root/Main/AddAlarm/AddAlarmButton/AddAlarmButton.js","components/shared/CustomChip/CustomChip.js","components/Root/Main/AlarmList/AlarmItem/RepetitionItems/RepetitionItems.js","components/Root/Main/AddAlarm/AddAlarmPopup/RepeatInputs/RepeatInputs.js","components/Root/Main/AddAlarm/AddAlarmPopup/TimeInputs/TimeInputs.js","components/Root/Main/AddAlarm/AddAlarmPopup/AddAlarmPopup.js","components/Root/Main/AddAlarm/utils.js","components/Root/Main/AddAlarm/AddAlarm.js","components/Root/Main/AlarmList/AlarmItem/ItemDetails/ItemDetails.js","components/Root/Main/AlarmList/AlarmItem/AlarmItem.js","components/Root/Main/AlarmList/AlarmItem/utils.js","components/Root/Main/AlarmList/AlarmList.js","components/Root/Main/Main.js","components/Root/Root.js","components/shared/ThemeProvider/ThemeProvider.js","App.js","index.js"],"names":["AlarmsContext","createContext","AlarmsProvider","children","preventStoreLoading","useState","alarms","setAlarms","useEffect","storeAlarms","localStorage","getItem","JSON","parse","getAlarmsFromStore","setItem","stringify","addAlarmsToStore","Provider","value","useStyles","makeStyles","root","fontSize","fontWeight","Clock","date","startDate","onDateChange","classes","currentDate","setDate","setInterval","Date","useDateForEverySecond","className","dateFormat","theme","display","justifyContent","alignItems","titleWrapper","descWrapper","marginLeft","color","palette","primary","dark","title","Header","Typography","variant","target","rel","href","RepetitionModel","once","daily","monToFri","custom","monday","tuesday","wednesday","thursday","friday","saturday","sunday","repetitionTexts","getText","repetition","activated","background","main","marginRight","transition","icon","AddAlarmButton","onClick","Fab","clsx","Add","customChipClasses","borderRadius","backgroundColor","CustomChip","selected","rest","Button","disableElevation","flexWrap","gap","margin","RepetitionItems","onRepetitionChange","repetitions","map","repName","handleRepetitionClick","require","marginTop","RepeatInputs","timeInput","width","fontFamily","border","padding","textAlign","outline","timePeriodsBox","alignSelf","cursor","TimeInputs","hour","minute","period","onHourChange","onMinuteChange","onPeriodActive","handlePeriodClick","onChange","active","toString","alpha","secondary","position","bottom","willChange","opacity","height","boxShadow","shadows","open","body","AddAlarmPopup","CSSTransition","in","timeout","classNames","Grow","padNumber","number","parseInt","AddAlarm","onItemAdd","setOpen","setHour","setMinute","setPeriod","setRepetition","hours","getHours","getMinutes","ClickAwayListener","onClickAway","e","repetitionName","time","repetitionText","repetitionListBox","ItemDetails","alarmData","expanded","hidden","light","cardTop","cardBottom","moreSettingsButton","AlarmItem","detailsExpanded","setDetailsExpanded","Switch","checked","isActive","flexFlow","flex","marginBottom","overflowY","paddingLeft","wrapper","AlarmList","EmptyListIllustration","src","alt","length","alarm","key","uniqid","overflow","Main","useContext","prev","app","gridTemplateRows","Root","defaultTheme","createTheme","overrides","MuiCssBaseline","MuiPaper","rounded","MuiButton","textTransform","lineHeight","default","paper","typography","join","ThemeProvider","App","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc765dbb.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { addAlarmsToStore, getAlarmsFromStore } from \"src/utils/store\";\r\n\r\nconst AlarmsContext = createContext();\r\n\r\nconst AlarmsProvider = ({ children, preventStoreLoading }) => {\r\n  const [alarms, setAlarms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!preventStoreLoading) {\r\n      const storeAlarms = getAlarmsFromStore();\r\n      if (storeAlarms) {\r\n        setAlarms(storeAlarms);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    addAlarmsToStore(alarms);\r\n  }, [alarms]);\r\n\r\n  return (\r\n    <AlarmsContext.Provider value={[alarms, setAlarms]}>\r\n      {children}\r\n    </AlarmsContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AlarmsContext, AlarmsProvider };\r\n","function getAlarmsFromStore() {\r\n  const storeAlarms = localStorage.getItem(\"@alarms-app/alarms\");\r\n\r\n  if (storeAlarms) {\r\n    return JSON.parse(storeAlarms);\r\n  }\r\n}\r\n\r\nfunction addAlarmsToStore(alarms) {\r\n  localStorage.setItem(\"@alarms-app/alarms\", JSON.stringify(alarms || []));\r\n}\r\n\r\nexport { getAlarmsFromStore, addAlarmsToStore };\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { useDateForEverySecond } from \"./hooks\";\r\nimport { formatClockTime } from \"./utils\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& > time\": {\r\n      fontSize: \"2.5rem\",\r\n      fontWeight: \"300\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Clock = ({ startDate, onDateChange }) => {\r\n  const classes = useStyles();\r\n  const currentDate = useDateForEverySecond(startDate);\r\n\r\n  if (currentDate !== startDate) {\r\n    onDateChange && onDateChange(currentDate);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <time data-testid=\"clock-time\">\r\n        {currentDate ? formatClockTime(currentDate) : \"00:00:00\"}\r\n      </time>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import dateFormat from \"dateformat\";\r\n\r\nconst clockFormat = \"h:MM TT\";\r\n\r\nfunction formatClockTime(date) {\r\n  return dateFormat(date, clockFormat);\r\n}\r\n\r\nexport { formatClockTime };\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDateForEverySecond(startDate) {\r\n  const [date, setDate] = useState(startDate);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return date;\r\n}\r\n\r\nexport { useDateForEverySecond };\r\n","import { Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { Clock } from \"./Clock\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    fontWeight: \"300\",\r\n  },\r\n  titleWrapper: {\r\n    display: \"inline-block\",\r\n    fontWeight: \"500\",\r\n  },\r\n  descWrapper: {\r\n    \"& > span\": {\r\n      fontSize: \".8rem\",\r\n    },\r\n    \"& > a\": {\r\n      fontSize: \".8rem\",\r\n      marginLeft: \".25rem\",\r\n      fontWeight: \"bold\",\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n  title: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header className={classes.root}>\r\n      <div className={classes.titleWrapper}>\r\n        <Typography variant=\"h1\" className={classes.title}>\r\n          web-alarm\r\n        </Typography>\r\n        <div className={classes.descWrapper}>\r\n          <span>designed by</span>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://github.com/isaacamaro03\"\r\n            data-testid=\"author-link\"\r\n          >\r\n            Isaac Amaro\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <Clock startDate={new Date()} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default class RepetitionModel {\r\n  static once = \"once\";\r\n  static daily = \"daily\";\r\n  static monToFri = \"monToFri\";\r\n  static custom = {\r\n    monday: \"monday\",\r\n    tuesday: \"tuesday\",\r\n    wednesday: \"wednesday\",\r\n    thursday: \"thursday\",\r\n    friday: \"friday\",\r\n    saturday: \"saturday\",\r\n    sunday: \"sunday\",\r\n  };\r\n}\r\n\r\nconst repetitionTexts = {\r\n  [RepetitionModel.once]: \"Once\",\r\n  [RepetitionModel.daily]: \"Daily\",\r\n  [RepetitionModel.monToFri]: \"Mon to Fri\",\r\n  [RepetitionModel.custom]: \"Custom\",\r\n  [RepetitionModel.monday]: \"Monday\",\r\n  [RepetitionModel.tuesday]: \"Tuesday\",\r\n  [RepetitionModel.wednesday]: \"Wednesday\",\r\n  [RepetitionModel.thursday]: \"Thursday\",\r\n  [RepetitionModel.friday]: \"Friday\",\r\n  [RepetitionModel.saturday]: \"Saturday\",\r\n  [RepetitionModel.sunday]: \"Sunday\",\r\n};\r\n\r\nfunction getText(repetition) {\r\n  return repetitionTexts[repetition];\r\n}\r\n\r\nfunction getRepetitions() {\r\n  return [\r\n    RepetitionModel.once,\r\n    RepetitionModel.daily,\r\n    RepetitionModel.monToFri,\r\n    RepetitionModel.custom,\r\n  ];\r\n}\r\n\r\nfunction getCustomRepetitions() {\r\n  return [\r\n    RepetitionModel.monday,\r\n    RepetitionModel.tuesday,\r\n    RepetitionModel.wednesday,\r\n    RepetitionModel.thursday,\r\n    RepetitionModel.friday,\r\n    RepetitionModel.saturday,\r\n    RepetitionModel.sunday,\r\n  ];\r\n}\r\n\r\nexport { repetitionTexts, getRepetitions, getCustomRepetitions, getText };\r\n","import { Fab, makeStyles } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  activated: {\r\n    background: theme.palette.primary.main,\r\n\r\n    \"&:hover\": {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    \"& $icon\": {\r\n      marginRight: \".5rem\",\r\n      transition: \"margin 80ms linear\",\r\n    },\r\n  },\r\n  icon: {},\r\n}));\r\n\r\nconst AddAlarmButton = ({ activated, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fab\r\n      className={clsx(classes.root, activated ? classes.activated : null)}\r\n      color=\"secondary\"\r\n      onClick={onClick}\r\n      variant={activated ? \"extended\" : \"circular\"}\r\n    >\r\n      <Add className={classes.icon} />\r\n      {activated ? \"Criar\" : \"\"}\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default AddAlarmButton;\r\n","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\nconst customChipClasses = {\r\n  selected: \"CustomChip-selected\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"hsl(0 0% 100% / .1)\",\r\n\r\n    [`&:hover:not(.${customChipClasses.selected})`]: {\r\n      backgroundColor: \"hsl(0 0% 100% / .3)\",\r\n    },\r\n    [`&.${customChipClasses.selected}`]: {\r\n      backgroundColor: \"hsl(0 0% 100% / .4)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomChip = ({ children, selected, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      disableElevation\r\n      color=\"primary\"\r\n      className={clsx(\r\n        classes.root,\r\n        selected ? customChipClasses.selected : null,\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CustomChip;\r\nexport { customChipClasses as classes };\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { CustomChip } from \"@web-alarm-components/shared/CustomChip\";\r\nimport { getRepetitions, getText } from \"src/utils/models/repetitionModel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    gap: \".5rem\",\r\n    margin: \".5rem 0\",\r\n  },\r\n});\r\n\r\nconst RepetitionItems = ({ repetition, onRepetitionChange }) => {\r\n  const classes = useStyles();\r\n\r\n  const repetitions = getRepetitions();\r\n\r\n  const handleRepetitionClick = (repName) => {\r\n    if (repetition !== repName) {\r\n      typeof onRepetitionChange === \"function\" && onRepetitionChange(repName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {repetitions.map((repName) => (\r\n        <CustomChip\r\n          key={repName}\r\n          selected={repName === repetition}\r\n          onClick={() => handleRepetitionClick(repName)}\r\n        >\r\n          {getText(repName)}\r\n        </CustomChip>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepetitionItems;\r\n","import RepetitionItems from \"@web-alarm-components/Root/Main/AlarmList/AlarmItem/RepetitionItems/RepetitionItems\";\r\n\r\nconst { Typography, makeStyles } = require(\"@material-ui/core\");\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: \"1rem\",\r\n    color: \"hsl(0 0% 100% / .8)\",\r\n  },\r\n  title: {\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\n\r\nconst RepeatInputs = ({ repetition, onRepetitionChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title}>Repeat</Typography>\r\n      <RepetitionItems\r\n        repetition={repetition}\r\n        onRepetitionChange={onRepetitionChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepeatInputs;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    gap: \".5rem\",\r\n  },\r\n\r\n  timeInput: {\r\n    width: \"50%\",\r\n    fontSize: \"4rem\",\r\n    fontFamily: \"inherit\",\r\n    fontWeight: 300,\r\n    border: \"none\",\r\n    padding: \".5rem\",\r\n    textAlign: \"center\",\r\n    borderRadius: \"1rem\",\r\n    background: \"hsl(0 0% 100% / .6)\",\r\n    outline: \"none\",\r\n  },\r\n\r\n  timePeriodsBox: {\r\n    display: \"grid\",\r\n    alignSelf: \"flex-end\",\r\n    padding: \".25rem\",\r\n    gap: \".25rem\",\r\n    borderRadius: \".5rem\",\r\n    background: \"hsl(0 0% 100% / .6)\",\r\n    fontWeight: \"500\",\r\n    color: \"black\",\r\n\r\n    \"& span\": {\r\n      padding: \".25rem\",\r\n      borderRadius: \"inherit\",\r\n      cursor: \"pointer\",\r\n\r\n      \"&[active=true]\": {\r\n        background: \"hsl(0 0% 100% / .6)\",\r\n      },\r\n      \"&:hover\": {\r\n        background: \"hsl(0 0% 100% / .7)\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst TimeInputs = ({\r\n  hour,\r\n  minute,\r\n  period,\r\n  onHourChange,\r\n  onMinuteChange,\r\n  onPeriodActive,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handlePeriodClick = (period) => {\r\n    typeof onPeriodActive === \"function\" && onPeriodActive(period);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        value={hour}\r\n        className={classes.timeInput}\r\n        onChange={onHourChange}\r\n      ></input>\r\n      <input\r\n        value={minute}\r\n        className={classes.timeInput}\r\n        onChange={onMinuteChange}\r\n      ></input>\r\n      <div className={classes.timePeriodsBox}>\r\n        <span\r\n          active={(period === \"am\").toString()}\r\n          onClick={() => handlePeriodClick(\"am\")}\r\n        >\r\n          AM\r\n        </span>\r\n        <span\r\n          active={(period === \"pm\").toString()}\r\n          onClick={() => handlePeriodClick(\"pm\")}\r\n        >\r\n          PM\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeInputs;\r\n","import { Grow, alpha, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport RepeatInputs from \"./RepeatInputs/RepeatInputs\";\r\nimport { TimeInputs } from \"./TimeInputs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: alpha(theme.palette.secondary.main, 0.8),\r\n    transition: `width 140ms cubic-bezier(0.4, 0, 1, 1), height 180ms ease-out, box-shadow 140ms linear 185ms, border-radius 180ms cubic-bezier(0, 0, 0.2, 1)`,\r\n    position: \"absolute\",\r\n    bottom: \"28px\",\r\n    willChange: \"width, height, border-radius, box-shadow\",\r\n    opacity: 0,\r\n    width: \"56px\",\r\n    height: \"56px\",\r\n    borderRadius: \"50%\",\r\n    boxShadow: theme.shadows[1],\r\n  },\r\n  open: {\r\n    \"&-enter\": {\r\n      opacity: 1,\r\n    },\r\n    \"&-enter-active, &-enter-done\": {\r\n      opacity: 1,\r\n      width: \"280px\",\r\n      height: \"344px\",\r\n      borderRadius: \"16px\",\r\n      boxShadow: theme.shadows[8],\r\n    },\r\n    \"&-exit\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  body: {\r\n    padding: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst AddAlarmPopup = ({\r\n  open,\r\n  hour,\r\n  minute,\r\n  period,\r\n  repetition,\r\n  onHourChange,\r\n  onMinuteChange,\r\n  onPeriodActive,\r\n  onRepetitionChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSSTransition in={open} timeout={180} classNames={classes.open}>\r\n      <div className={clsx(classes.root)}>\r\n        <Grow in={open} timeout={open ? 440 : 120}>\r\n          <div className={clsx(classes.body)}>\r\n            <TimeInputs\r\n              hour={hour}\r\n              minute={minute}\r\n              period={period}\r\n              onHourChange={onHourChange}\r\n              onMinuteChange={onMinuteChange}\r\n              onPeriodActive={onPeriodActive}\r\n            />\r\n            <RepeatInputs\r\n              repetition={repetition}\r\n              onRepetitionChange={onRepetitionChange}\r\n            />\r\n          </div>\r\n        </Grow>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default AddAlarmPopup;\r\n","function padNumber(number) {\r\n  if (typeof number !== \"number\") {\r\n    number = parseInt(number) || 0;\r\n  }\r\n  return number > 9 ? number.toString() : \"0\" + number;\r\n}\r\n\r\nexport { padNumber };\r\n","import { ClickAwayListener, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RepetitionModel from \"src/utils/models/repetitionModel\";\r\n\r\nimport { AddAlarmButton } from \"./AddAlarmButton\";\r\nimport { AddAlarmPopup } from \"./AddAlarmPopup\";\r\nimport { padNumber } from \"./utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    alignSelf: \"center\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst AddAlarm = ({ onItemAdd }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [hour, setHour] = useState();\r\n  const [minute, setMinute] = useState();\r\n  const [period, setPeriod] = useState();\r\n  const [repetition, setRepetition] = useState(RepetitionModel.once);\r\n\r\n  useEffect(() => {\r\n    const startDate = new Date();\r\n    const hours = startDate.getHours();\r\n\r\n    setPeriod(hours > 12 ? \"pm\" : \"am\");\r\n\r\n    setHour(padNumber(hours % 12 || hours));\r\n    setMinute(padNumber(startDate.getMinutes()));\r\n  }, []);\r\n\r\n  const handleOpenPopup = () => {\r\n    if (open) {\r\n      typeof onItemAdd === \"function\" &&\r\n        onItemAdd({\r\n          time: new Date(0, 0, 0, hour, minute, 0),\r\n          repetition,\r\n        });\r\n    }\r\n    setOpen(!open);\r\n  };\r\n\r\n  const onHourChange = (e) => {\r\n    setHour(e.target.value);\r\n  };\r\n  const onMinuteChange = (e) => {\r\n    setMinute(e.target.value);\r\n  };\r\n  const onPeriodActive = (period) => {\r\n    setPeriod(period);\r\n  };\r\n  const onRepetitionChange = (repetitionName) => {\r\n    setRepetition(repetitionName);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n      <div className={clsx(classes.root)}>\r\n        <AddAlarmPopup\r\n          open={open}\r\n          hour={hour}\r\n          minute={minute}\r\n          period={period}\r\n          repetition={repetition}\r\n          onHourChange={onHourChange}\r\n          onMinuteChange={onMinuteChange}\r\n          onPeriodActive={onPeriodActive}\r\n          onRepetitionChange={onRepetitionChange}\r\n        />\r\n        <AddAlarmButton onClick={handleOpenPopup} activated={open} />\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nexport default AddAlarm;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { getText } from \"src/utils/models/repetitionModel\";\r\n\r\nimport RepetitionItems from \"../RepetitionItems/RepetitionItems\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  repetitionText: {\r\n    fontWeight: 500,\r\n  },\r\n  body: {\r\n    \"&:not([hidden])\": {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  repetitionListBox: {\r\n    display: \"flex\",\r\n    gap: 4,\r\n    margin: \"1rem 0\",\r\n  },\r\n});\r\n\r\nconst ItemDetails = ({ alarmData, expanded }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.repetitionText}>\r\n        {getText(alarmData.repetition)}\r\n      </div>\r\n      <div className={classes.body} hidden={!expanded}>\r\n        <RepetitionItems repetition={alarmData.repetition} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemDetails;\r\n","import { Switch, alpha, makeStyles } from \"@material-ui/core\";\r\nimport { CustomChip } from \"@web-alarm-components/shared/CustomChip\";\r\nimport { useState } from \"react\";\r\n\r\nimport { ItemDetails } from \"./ItemDetails\";\r\nimport { formatAlarmTime } from \"./utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \".5rem\",\r\n    borderRadius: \"8px\",\r\n    background: alpha(theme.palette.primary.light, 0.15),\r\n    boxShadow: `-2px 3px 1px 1px ${alpha(theme.palette.primary.light, 0.2)}`,\r\n  },\r\n  body: {},\r\n  cardTop: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n\r\n    \"& > time\": {\r\n      fontSize: \"1.5rem\",\r\n      fontWeight: \"500\",\r\n    },\r\n  },\r\n  cardBottom: {\r\n    display: \"flex\",\r\n    marginTop: \".5rem\",\r\n  },\r\n  moreSettingsButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AlarmItem = ({ alarmData }) => {\r\n  const classes = useStyles();\r\n\r\n  const [detailsExpanded, setDetailsExpanded] = useState(false);\r\n\r\n  const handleDetailsToggle = () => {\r\n    setDetailsExpanded(!detailsExpanded);\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"alarm-item\" className={classes.root}>\r\n      <div className={classes.body}>\r\n        <div className={classes.cardTop}>\r\n          <time data-testid=\"alarm-item-time\">\r\n            {formatAlarmTime(alarmData.time)}\r\n          </time>\r\n          <Switch color=\"primary\" checked={alarmData.isActive} />\r\n        </div>\r\n        <ItemDetails alarmData={alarmData} expanded={detailsExpanded} />\r\n        <div className={classes.cardBottom}>\r\n          <CustomChip\r\n            className={classes.moreSettingsButton}\r\n            onClick={handleDetailsToggle}\r\n          >\r\n            {detailsExpanded ? \"Hide settings\" : \"More settings\"}\r\n          </CustomChip>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlarmItem;\r\n","import dateFormat from \"dateformat\";\r\n\r\nconst alarmTimeFormat = \"h:MM TT\";\r\n\r\nfunction formatAlarmTime(date) {\r\n  return dateFormat(date, alarmTimeFormat);\r\n}\r\n\r\nexport { formatAlarmTime };\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { AlarmItem } from \"./AlarmItem\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    flex: 1,\r\n    marginBottom: \"3rem\",\r\n    overflowY: \"scroll\",\r\n    paddingLeft: \".5rem\",\r\n\r\n    \"& > img\": {\r\n      margin: \"auto 0\",\r\n    },\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    gap: \"1rem\",\r\n    padding: \"0 .25rem .25rem .25rem\",\r\n  },\r\n});\r\n\r\nconst AlarmList = ({ alarms }) => {\r\n  const classes = useStyles();\r\n\r\n  const EmptyListIllustration = () => {\r\n    return (\r\n      <img\r\n        src={\r\n          process.env.NODE_ENV === \"development\"\r\n            ? \"./web-alarm/clock_illustration.svg\"\r\n            : \"./clock_illustration.svg\"\r\n        }\r\n        alt=\"a clock to serve as a space filler when there's no alarms configured\"\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {alarms.length ? (\r\n        <div className={classes.wrapper}>\r\n          {alarms.map((alarm) => (\r\n            <AlarmItem key={alarm.key} alarmData={alarm} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <EmptyListIllustration />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlarmList;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { AlarmsContext } from \"@web-alarm-components/AlarmsContext\";\r\nimport { useContext } from \"react\";\r\n\r\nimport { AddAlarm } from \"./AddAlarm\";\r\nimport { AlarmList } from \"./AlarmList\";\r\n\r\nconst uniqid = require(\"uniqid\");\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    overflow: \"visible\",\r\n  },\r\n});\r\n\r\nconst Main = () => {\r\n  const classes = useStyles();\r\n  const [alarms, setAlarms] = useContext(AlarmsContext);\r\n\r\n  const onAddAlarmClick = ({ time, repetition }) => {\r\n    setAlarms((prev) => [\r\n      ...prev,\r\n      {\r\n        key: uniqid(),\r\n        time: time,\r\n        isActive: true,\r\n        repetition: repetition,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <AlarmList alarms={alarms} />\r\n      <AddAlarm onItemAdd={onAddAlarmClick} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { AlarmsProvider } from \"@web-alarm-components/AlarmsContext\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Main } from \"./Main\";\r\n\r\nconst useStyles = makeStyles({\r\n  app: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto minmax(0px, 1fr)\",\r\n    gap: \"3rem\",\r\n    height: \"100%\",\r\n    width: \"444px\",\r\n    margin: \"0 auto\",\r\n    padding: \"1rem 0 2rem\",\r\n  },\r\n});\r\n\r\nconst Root = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AlarmsProvider>\r\n        <div className={classes.app}>\r\n          <Header />\r\n          <Main />\r\n        </div>\r\n      </AlarmsProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import { createTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst defaultTheme = createTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        body: {\r\n          color: \"hsl(353deg 20% 40%)\",\r\n        },\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      rounded: {\r\n        borderRadius: \"8px\",\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        borderRadius: \"8px\",\r\n        lineHeight: \"1.25rem\",\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    background: {\r\n      default: \"hsla(0, 50%, 96%, 1)\",\r\n      paper: \"hsla(0, 50%, 96%, 1)\",\r\n    },\r\n    primary: {\r\n      main: \"hsl(354, 89%, 55%)\",\r\n    },\r\n    secondary: {\r\n      main: \"hsl(231, 88%, 58%)\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"system-ui\", \"sans-serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  return <MuiThemeProvider theme={defaultTheme}>{children}</MuiThemeProvider>;\r\n};\r\n\r\nexport default ThemeProvider;\r\nexport { defaultTheme };\r\n","import \"./App.css\";\n\nimport { CssBaseline } from \"@material-ui/core\";\nimport { Root } from \"@web-alarm-components/Root\";\nimport { ThemeProvider } from \"@web-alarm-components/shared/ThemeProvider\";\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <CssBaseline />\n      <Root />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}