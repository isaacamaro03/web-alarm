{"version":3,"sources":["components/AlarmsContext/AlarmsContext.js","components/Root/Header/Header.js","components/Root/Main/AddNewAlarmButton/AddNewAlarmButton.js","components/Root/Main/AlarmList/AlarmList.js","components/Root/Main/Clock/Clock.js","components/Root/Main/Clock/utils.js","components/Root/Main/Clock/hooks.js","components/Root/Main/Main.js","components/Root/Root.js","components/shared/ThemeProvider/ThemeProvider.js","App.js","index.js"],"names":["AlarmsContext","createContext","AlarmsProvider","children","useState","alarms","setAlarms","Provider","value","Header","AddNewAlarmButton","Fab","Add","AlarmList","map","alarm","time","Clock","date","startDate","onDateChange","currentDate","setDate","useEffect","setInterval","Date","useDateForEverySecond","dateFormat","Main","useContext","Root","defaultTheme","createTheme","overrides","MuiCssBaseline","body","color","MuiPaper","rounded","borderRadius","MuiButton","root","textTransform","lineHeight","palette","background","default","paper","primary","main","secondary","typography","fontFamily","join","ThemeProvider","theme","App","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEMA,EAAgBC,0BAEhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CAACH,EAAQC,GAAxC,SACGH,KCGQM,EAZA,WACb,OACE,mCACE,2CACA,kCACE,+CACA,mBAAG,cAAY,cAAf,gC,gBCKOC,EARW,WACxB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,OCFSC,EAJG,SAAC,GACjB,OADgC,EAAbR,OACLS,KAAI,SAACC,GAAD,OAAW,8BAAMA,EAAMC,W,qBCI3C,IAgBeC,EAhBD,SAAC,GAAiC,ICDvBC,EDCRC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpBC,EEJR,SAA+BF,GAC7B,MAAwBf,mBAASe,GAAjC,mBAAOD,EAAP,KAAaI,EAAb,KAQA,OANAC,qBAAU,WACRC,aAAY,WACVF,EAAQ,IAAIG,QACX,OACF,IAEIP,EFLaQ,CAAsBP,GAM1C,OAJIE,IAAgBF,GAClBC,GAAgBA,EAAaC,GAI7B,8BACE,sBAAM,cAAY,aAAlB,SACGA,GCXgBH,EDWcG,ECV9BM,IAAWT,EAHA,eDakC,gBGIvCU,EAZF,WACX,MAA4BC,qBAAW7B,GAAvC,mBAAOK,EAAP,UAEA,OACE,iCACE,cAAC,EAAD,CAAOc,UAAW,IAAIM,OACtB,cAAC,EAAD,CAAWpB,OAAQA,IACnB,cAAC,EAAD,QCESyB,EAXF,WACX,OACE,mCACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,U,gBCPFC,EAAeC,YAAY,CAC/BC,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJC,MAAO,wBAIbC,SAAU,CACRC,QAAS,CACPC,aAAc,QAGlBC,UAAW,CACTC,KAAM,CACJC,cAAe,OACfH,aAAc,MACdI,WAAY,aAIlBC,QAAS,CACPC,WAAY,CACVC,QAAS,UACTC,MAAO,WAETC,QAAS,CACPC,KAAM,sBAERC,UAAW,CACTD,KAAM,uBAGVE,WAAY,CACVC,WAAY,CAAC,YAAa,cAAcC,KAAK,QAQlCC,EAJO,SAAC,GAAkB,IAAhBnD,EAAe,EAAfA,SACvB,OAAO,cAAC,IAAD,CAAkBoD,MAAOxB,EAAzB,SAAwC5B,KC9BlCqD,MATf,WACE,OACE,eAAC,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec8343d0.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nconst AlarmsContext = createContext();\r\n\r\nconst AlarmsProvider = ({ children }) => {\r\n  const [alarms, setAlarms] = useState([]);\r\n\r\n  return (\r\n    <AlarmsContext.Provider value={[alarms, setAlarms]}>\r\n      {children}\r\n    </AlarmsContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AlarmsContext, AlarmsProvider };\r\n","const Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Web Alarm</h1>\r\n      <small>\r\n        <span>designed by</span>\r\n        <a data-testid=\"author-link\">Isaac Amaro</a>\r\n      </small>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Fab } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\n\r\nconst AddNewAlarmButton = () => {\r\n  return (\r\n    <Fab>\r\n      <Add />\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default AddNewAlarmButton;\r\n","const AlarmList = ({ alarms }) => {\r\n  return alarms.map((alarm) => <div>{alarm.time}</div>);\r\n};\r\n\r\nexport default AlarmList;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { useDateForEverySecond } from \"./hooks\";\r\nimport { formatClockTime } from \"./utils\";\r\n\r\nconst Clock = ({ startDate, onDateChange }) => {\r\n  const currentDate = useDateForEverySecond(startDate);\r\n\r\n  if (currentDate !== startDate) {\r\n    onDateChange && onDateChange(currentDate);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <time data-testid=\"clock-time\">\r\n        {currentDate ? formatClockTime(currentDate) : \"00:00:00\"}\r\n      </time>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import dateFormat from \"dateformat\";\r\n\r\nconst clockFormat = \"h:MM:ss TT\";\r\n\r\nfunction formatClockTime(date) {\r\n  return dateFormat(date, clockFormat);\r\n}\r\n\r\nexport { formatClockTime };\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDateForEverySecond(startDate) {\r\n  const [date, setDate] = useState(startDate);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return date;\r\n}\r\n\r\nexport { useDateForEverySecond };\r\n","import { AlarmsContext } from \"@web-alarm-components/AlarmsContext\";\r\nimport { useContext } from \"react\";\r\n\r\nimport { AddNewAlarmButton } from \"./AddNewAlarmButton\";\r\nimport { AlarmList } from \"./AlarmList\";\r\nimport { Clock } from \"./Clock\";\r\n\r\nconst Main = () => {\r\n  const [alarms, setAlarms] = useContext(AlarmsContext);\r\n\r\n  return (\r\n    <main>\r\n      <Clock startDate={new Date()} />\r\n      <AlarmList alarms={alarms} />\r\n      <AddNewAlarmButton />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { AlarmsProvider } from \"@web-alarm-components/AlarmsContext\";\r\n\r\nimport { Header } from \"./Header\";\r\nimport { Main } from \"./Main\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <>\r\n      <AlarmsProvider>\r\n        <Header />\r\n        <Main />\r\n      </AlarmsProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import { createTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst defaultTheme = createTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        body: {\r\n          color: \"hsl(353, 11%, 31%)\",\r\n        },\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      rounded: {\r\n        borderRadius: \"8px\",\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        borderRadius: \"8px\",\r\n        lineHeight: \"1.25rem\",\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    background: {\r\n      default: \"#fffbfb\",\r\n      paper: \"#fffbfb\",\r\n    },\r\n    primary: {\r\n      main: \"hsl(354, 89%, 55%)\",\r\n    },\r\n    secondary: {\r\n      main: \"hsl(231, 88%, 58%)\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"system-ui\", \"sans-serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  return <MuiThemeProvider theme={defaultTheme}>{children}</MuiThemeProvider>;\r\n};\r\n\r\nexport default ThemeProvider;\r\nexport { defaultTheme };\r\n","import { CssBaseline } from \"@material-ui/core\";\nimport { Root } from \"@web-alarm-components/Root\";\nimport { ThemeProvider } from \"@web-alarm-components/shared/ThemeProvider\";\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <CssBaseline />\n      <Root />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}